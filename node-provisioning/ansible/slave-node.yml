- hosts: all
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw
      tags:
        - master

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"
      tags:
        - master

    - name: join cluster
      shell: "{{ join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt
      tags:
        - slave

    - name: Retrieve helm binary archive.
      tags:
        - master
      unarchive:
        src: https://get.helm.sh/helm-v3.2.1-linux-amd64.tar.gz
        dest: /tmp
        creates: /usr/local/bin/helm
        remote_src: yes

    - name: Move helm binary into place.
      tags:
        - master
      command: cp /tmp/linux-amd64/helm /usr/local/bin/helm
      args:
        creates: /usr/local/bin/helm

    - name: Add helm repo
      tags:
        - master
      kubernetes.core.helm_repository:
        name: bitnami
        repo_url: "https://charts.bitnami.com/bitnami"

    - name: Install Contour Chart
      tags:
        - master
      kubernetes.core.helm:
        name: my-release
        release_namespace: default
        chart_ref: bitnami/contour

    - name: Build master node image
      tags:
        - master
      community.docker.docker_image:
        name: eth-master-node
        build:
          path: /eth-node
          dockerfile: ./.docker/node.dockerfile
          args:
            NODE_ID: 0
            JSON_KEY: "{{ JSON_KEY }}"
        source: build

    - name: Deploy master service
      tags:
        - master
      community.kubernetes.k8s:
        state: present
        src: /k8s/master-service.yml

    - name: Deploy master node
      tags:
        - master
      community.kubernetes.k8s:
        state: present
        src: /k8s/master-deployment.yml

    - name: Deploy master ingress
      tags:
        - master
      community.kubernetes.k8s:
        state: present
        src: /k8s/master-ingress.yml

    - name: Build slave node image
      community.docker.docker_image:
        name: eth-slave-node
        build:
          path: /eth-node
          dockerfile: ./.docker/node.dockerfile
          args:
            NODE_ID: 1
            JSON_KEY: "{{ JSON_KEY }}"
        source: build
        tags:
          - slave

    - name: Get master node enode uri
      uri:
        body:
          "method": "parity_enode"
          "params": []
          "id": 1
          "jsonrpc": "2.0"
        body_format: json
        method: POST
        url: "http://master-service:8545"
        return_content: yes
      register: enode_uri
      tags:
        - slave

    - name: Print returned json dictionary
      debug:
        var: enode_uri.json
      tags:
        - slave

    - name: Create secret
      community.kubernetes.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: master-enode-uri
          type: Opaque
          data:
            uri: "{{ enode_uri.json.result | b64encode }}"
      tags:
        - slave

    - name: Deploy slave
      community.kubernetes.k8s:
        state: present
        src: /k8s/slave-deployment.yml
      tags:
        - slave
